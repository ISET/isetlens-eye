function [oiFig,cmFig,activationFig,horizFig,vertFig]  = coneMosaicActivationVisualize(theMosaic, spatialActivationMap,oi,saveDir)

    % determine plotting ranges and ticks
    responseRange = prctile(spatialActivationMap(:), [1 99]);
    spaceLimitsDegs = theMosaic.fov/2.*[-1 1]; %0.26*[-1 1];
    spaceLimitsMeters = spaceLimitsDegs*theMosaic.micronsPerDegree * 1e-6;
    tickDegs = (-1*round(theMosaic.fov/2,1)):0.2:(round(theMosaic.fov/2,1)); %-0.3:0.1:0.3;
    tickMeters = tickDegs * theMosaic.micronsPerDegree * 1e-6;
    
    %% Visualize the optical image
    
    oiFig = figure();
    set(gcf, 'Color', [1 1 1]);
    rgb = oiGet(oi,'rgb');
    imshow(rgb);
    box on;
    
    %% Visualize the cone mosaic
    cmFig = figure();
    set(gcf, 'Color', [1 1 1]);
    axHandle = gca;
    theMosaic.visualizeGrid('axesHandle', axHandle, 'backgroundColor', [1 1 1]);
    set(gca, 'XTick', tickMeters, 'XTickLabel', sprintf('%2.1f\n', tickDegs), ...
        'YTick', tickMeters, 'YTickLabel', sprintf('%2.1f\n', tickDegs), ...
        'XLim', spaceLimitsMeters, 'YLim', spaceLimitsMeters, ...
        'FontSize', 14);
    set(gca, 'XTick', tickMeters, 'XTickLabel', sprintf('%2.1f\n', tickDegs), ...
        'XLim', spaceLimitsMeters,...
        'FontSize', 14);
    xlabel('\it space (degs)');
    ylabel('\it space (degs)');
    box on;
    title('Cone Mosaic');
    
    %% Visualize the 2D mosaic activation
    activationFig = figure();
    set(gcf, 'Color', [1 1 1]);
    axHandle = gca;
    theMosaic.renderActivationMap(axHandle, spatialActivationMap, ...
                'mapType', 'modulated disks', ...
                'signalRange', responseRange, ...
                'showColorBar', true, ...
                'labelColorBarTicks',true,...
                'showYLabel', false, ...
                'showXLabel', false, ...
                'titleForColorBar', '',...
                'backgroundColor', [0 0 0]);
    set(gca, 'XTick', tickMeters, 'XTickLabel', sprintf('%2.1f\n', tickDegs), ...
             'YTick', tickMeters, 'YTickLabel', {}, ...
             'XLim', spaceLimitsMeters, 'YLim', spaceLimitsMeters, ...
             'FontSize', 14);
    xlabel('\it space (degs)');
    ylabel('');
    title('Cone Mosaic Response');
    
    %% Plot along horizontal and vertical meridians
    
    % Find indices of cones along horizontal and vertical meridians
    [indicesOfConesAlongXaxis, indicesOfConesAlongYaxis, ...
        xCoordsOfConesAlongXaxis, yCoordsOfConesAlongYaxis] = indicesForConesAlongMeridians(theMosaic);
    identitiesOfConesAlongXaxis = theMosaic.pattern(indicesOfConesAlongXaxis);
    identitiesOfConesAlongYaxis = theMosaic.pattern(indicesOfConesAlongYaxis);
    
    % Visualize the mosaic activation along the horizontal meridian
    %subplot(1,4,4);
    horizFig = figure();
    set(gcf, 'Color', [1 1 1]);
    visualizeMosaicResponseAlongMeridian(...
        indicesOfConesAlongXaxis, ...
        identitiesOfConesAlongXaxis, ...
        xCoordsOfConesAlongXaxis, ...
        spatialActivationMap, ...
        tickDegs, spaceLimitsDegs, ...
        sprintf('Response of Cones\Along the Horizontal Meridian'));
    
    % Visualize the mosaic activation along the vertical meridian
    vertFig = figure();
    set(gcf, 'Color', [1 1 1]);
    visualizeMosaicResponseAlongMeridian(...
        indicesOfConesAlongYaxis, ...
        identitiesOfConesAlongYaxis, ...
        yCoordsOfConesAlongYaxis, ...
        spatialActivationMap, ...
        tickDegs, spaceLimitsDegs, ...
        sprintf('Response of Cones\Along the Vertical Meridian'));
    
end
   
